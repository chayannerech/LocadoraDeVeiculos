@using LocadoraDeVeiculos.Dominio.ModuloAluguel
@using LocadoraDeVeiculos.WebApp.Models
@model EditarAluguelViewModel

@{
    ViewBag.Title = "Editar aluguel";
}

<style>
    .is-invalid {
        border-color: red;
    }
</style>

<div class="col">
    <div class="row gap-3 my-3 my-xl-4">
        <form class="col-lg-6 d-grid" asp-action="Editar">
            <!-- Cliente -->
            <div>
                <label class="control-label fw-bold mb-1">Cliente</label>
                <select class="form-select" asp-for="ClienteId" asp-items="Model.Clientes" id="clienteSelect">
                    <option value="" selected disabled>Selecione um cliente</option>
                </select>
                <span class="text-danger fs-6" asp-validation-for="ClienteId"></span>
            </div>

            <!-- Condutor -->
            <div>
                <label class="control-label fw-bold mb-1 mt-3">Condutor</label>
                <select class="form-select mb-1" asp-for="CondutorId" id="condutorSelect" disabled>
                    <option value="" selected disabled>Selecione um condutor</option>
                    @foreach (var condutor in Model.Condutores!)
                    {
                        <option value="@condutor.Id"
                                data-clienteid="@condutor.Cliente.Id"
                                data-validadecnh="@condutor.ValidadeCNH.ToString("yyyy-MM-dd")">
                            @condutor.Nome
                        </option>
                    }
                </select>
                <span class="text-danger fs-6" asp-validation-for="CondutorId"></span>
                <div id="condutorWarning" class="text-danger fs-6" style="display: none;">
                    Nenhum condutor associado a este cliente
                </div>
                <div id="cnhWarning" class="text-danger fs-6" style="display: none;">
                    A CNH deste condutor está vencida
                </div>
            </div>

            <!-- Grupo de Automóveis e Veículo -->
            <div class="d-none" id="grupoEveiculo">
                <div>
                    <label class="control-label fw-bold mt-3 mb-1">Grupo de Automóveis</label>
                    <select class="form-select mb-1" asp-for="GrupoId" id="grupoSelect">
                        <option value="" selected disabled>Selecione um grupo</option>
                        @foreach (var grupo in Model.Grupos!)
                        {
                            <option value="@grupo.Id"
                                    data-preco-diaria="@grupo.PrecoDiaria"
                                    data-preco-diaria-controlada="@grupo.PrecoDiariaControlada"
                                    data-preco-livre="@grupo.PrecoLivre">
                                @grupo.Nome
                            </option>
                        }
                    </select>
                    <span class="text-danger fs-6" asp-validation-for="GrupoId"></span>
                </div>

                <div class="d-flex align-items-start gap-3 mt-3">
                    <div class="flex-fill">
                        <label class="control-label fw-bold mb-1">Veículo</label>
                        <select class="form-select mb-1" asp-for="VeiculoId" id="veiculoSelect" disabled>
                            <option value="" selected disabled>Selecione um veículo</option>
                            @foreach (var veiculo in Model.Veiculos!)
                            {
                                var imagemBase64 = Convert.ToBase64String(veiculo.ImagemEmBytes ?? new byte[0]);
                                var imagemDataUrl = $"data:{veiculo.TipoDaImagem};base64,{imagemBase64}";

                                <option value="@veiculo.Id"
                                        data-grupoid="@veiculo.GrupoDeAutomoveis.Id"
                                        data-alugado="@veiculo.Alugado"
                                        data-imagem="@imagemDataUrl">
                                    @veiculo.Marca modelo @veiculo.Modelo, Placa @veiculo.Placa
                                </option>
                            }
                        </select>
                        <span class="text-danger fs-6" asp-validation-for="VeiculoId"></span>
                        <div id="alugadoWarning" class="text-danger fs-6" style="display: none;">
                            Este veículo já está alugado
                        </div>
                        <div id="veiculoWarning" class="text-danger fs-6" style="display: none;">
                            Nenhum veículo associado a este grupo
                        </div>
                        <div id="planoWarning" class="text-danger fs-6" style="display: none;">
                            Não existe um plano de aluguel associado a este grupo de automóveis
                        </div>
                    </div>

                    <div class="flex-shrink-0 d-none" id="veiculoImagemGrupoiner">
                        <img id="veiculoImagem" class="img-fluid" alt="Imagem do veículo selecionado" style="max-width: 150px; max-height: 100px; border: 1px solid #ced4da; border-radius: .25rem;">
                    </div>
                </div>
            </div>

            <!-- Data de Retirada e Data de Devolução -->
            <div class="d-flex flex-row gap-3 mt-4 d-none" id="datas">
                <div class="flex-fill">
                    <label class="control-label fw-bold mb-1">Data de Retirada</label>
                    <input type="date" class="form-control mb-1" asp-for="DataSaida" id="saida" />
                    <span class="text-danger fs-6" asp-validation-for="DataSaida"></span>
                    <div id="saidaWarning" class="text-danger fs-6" style="display: none;">
                        O veículo deve ser retirado em uma data superior à hoje
                    </div>
                </div>

                <div class="flex-fill">
                    <label class="control-label fw-bold mb-1">Data de devolução</label>
                    <input type="date" class="form-control mb-1" asp-for="DataRetornoPrevista" id="retorno" disabled />
                    <span class="text-danger fs-6" asp-validation-for="DataRetornoPrevista"></span>
                    <div id="retornoWarning" class="text-danger fs-6" style="display: none;">
                        A data de devolução deve ser superior à data de retirada
                    </div>
                </div>
            </div>

            <!-- Valor de Entrada, Dias de Aluguel e Plano de Aluguel -->
            <div class="d-flex flex-row gap-3 mt-4 d-none" id="entradaEplano">
                <div class="flex-fill">
                    <label class="control-label fw-bold mb-1">Valor de Entrada</label>
                    <input class="form-control mb-1" value="R$ 1000,00" disabled />
                </div>

                <div class="flex-fill">
                    <label class="control-label fw-bold mb-1">Dias de aluguel</label>
                    <input class="form-control mb-1" id="dias" disabled />
                </div>

                <div class="flex-fill">
                    <label class="control-label fw-bold mb-1">Plano de aluguel</label>
                    <select class="form-select mb-1" asp-for="CategoriaPlano" id="planoSelect">
                        <option value="" selected disabled>Plano</option>
                        <option value="diário">Diário</option>
                        <option value="controlado">Controlado</option>
                        <option value="livre">Livre</option>
                    </select>
                    <span class="text-danger fs-6" asp-validation-for="CategoriaPlano"></span>
                    <small id="valorPlano" class="text-muted"></small>
                </div>
            </div>

            <!-- Taxas e Serviços -->
            <div class="d-none" id="taxas">
                <label class="control-label fw-bold mb-1 mt-3">Taxas e Serviços</label>
                <div class="gap-4" style="border: 1px solid #ced4da; border-radius: .25rem; padding: .375rem;">
                    @if (!Model.Taxas.Any())
                    {
                        <div>Ainda não existem taxas associadas</div>
                    }
                    else
                    {
                        @foreach (var taxa in Model.Taxas!)
                        {
                            var cobranca = taxa.PrecoFixo ? "Valor fixo" : "Valor diário";

                            if (taxa.Seguro)
                            {
                                <div class="d-flex gap-3 mt-2 mb-2 align-items-center">
                                    <div class="form-check me-5">
                                        <input class="form-check-input taxa-checkbox" type="checkbox" name="TaxasSelecionadas" value="@taxa.Id" id="taxa_@taxa.Id" data-preco="@taxa.Preco" data-precofixo="@taxa.PrecoFixo.ToString().ToLower()">
                                        <label class="form-check-label" for="taxa_@taxa.Id">
                                            @taxa.Nome (@taxa.Preco R$ - @cobranca)
                                        </label>
                                    </div>

                                    <div class="d-flex align-items-center gap-2 form-switch-container">
                                        <label class="control-label ms-3 me-2">Cliente</label>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input form-switch-input" type="checkbox" name="SeguroCliente_@taxa.Id" id="seguro_cliente_@taxa.Id" disabled required>
                                        </div>
                                        <label class="control-label">Terceiro</label>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input form-switch-input" type="checkbox" name="SeguroTerceiro_@taxa.Id" id="seguro_terceiro_@taxa.Id" disabled required>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="form-check mt-2 mb-2">
                                    <input class="form-check-input taxa-checkbox" type="checkbox" name="TaxasSelecionadas" value="@taxa.Id" id="taxa_@taxa.Id" data-preco="@taxa.Preco" data-precofixo="@taxa.PrecoFixo.ToString().ToLower()">
                                    <label class="form-check-label" for="taxa_@taxa.Id">
                                        @taxa.Nome (@taxa.Preco R$ - @cobranca)
                                    </label>
                                </div>
                            }
                        }
                    }
                </div>
                <input type="hidden" asp-for="TaxasSelecionadasId" id="taxasSelecionadas"/>
                <p id="teste"></p>
            </div>

            <!-- Valor total -->
            <div class="d-none d-flex justify-content-end align-items-center gap-3 mt-5" id="mostraTotal">
                <label class="control-label fw-bold mb-0">Valor total</label>
                <div class="flex-fill" style="max-width: 150px;">
                    <input class="form-control mb-0" id="total" disabled />
                    <input type="hidden" asp-for="ValorTotal" id="valor" />
                </div>
            </div>

            <!-- Gravar -->
            <div class="row justify-content-center my-5 gap-3">
                <button class="btn btn-secondary px-5" style="width: 170px">
                    <i class="bi bi-floppy-fill me-1"></i>
                    Gravar
                </button>

                <a class="btn btn-outline-secondary px-5" style="width: 170px" href="/Aluguel/listar">
                    <i class="bi bi-arrow-return-left me-1"></i>
                    Voltar
                </a>
                </divclass>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            function filtrarCondutoresPorCliente(clienteId) {
                let condutorEncontrado = false;

                $('#condutorSelect option').each(function () {
                    const condutorClienteId = $(this).data('clienteid');

                    if (condutorClienteId == clienteId) {
                        $(this).show();
                        condutorEncontrado = true;
                    } else {
                        $(this).hide();
                    }
                });

                if (condutorEncontrado) {
                    $('#condutorSelect').removeClass('is-invalid').prop('disabled', false);
                    $('#condutorWarning').hide();
                } else {
                    $('#condutorSelect').addClass('is-invalid').prop('disabled', true);
                    $('#condutorWarning').show();
                    $('#grupoEveiculo').addClass('d-none');
                    $('#datas').addClass('d-none');
                }

                $('#condutorSelect').val('');
            }

            function verificarValidadeCnh() {
                const condutorSelecionado = $('#condutorSelect option:selected');
                const validadeCnh = new Date(condutorSelecionado.data('validadecnh'));
                const dataAtual = new Date();

                if (validadeCnh < dataAtual) {
                    $('#condutorSelect').addClass('is-invalid');
                    $('#grupoEveiculo').addClass('d-none');
                    $('#datas').addClass('d-none');
                    $('#cnhWarning').show();
                } else {
                    $('#condutorSelect').removeClass('is-invalid');
                    $('#cnhWarning').hide();
                    $('#grupoEveiculo').removeClass('d-none');
                }
            }

            function filtrarVeiculosPorGrupo(grupoId) {
                let veiculoEncontrado = false;

                $('#veiculoSelect option').each(function () {
                    const veiculoGrupoId = $(this).data('grupoid');

                    if (veiculoGrupoId == grupoId) {
                        $(this).show();
                        veiculoEncontrado = true;
                    } else {
                        $(this).hide();
                    }
                });

                if (veiculoEncontrado) {
                    $('#veiculoSelect').prop('disabled', false);
                    $('#veiculoWarning').hide();
                } else {
                    $('#veiculoSelect').prop('disabled', true);
                    $('#veiculoWarning').show();
                    $('#datas').addClass('d-none');
                }

                $('#veiculoSelect').val('');
            }

            function verificarVeiculoAlugado() {
                const veiculoSelecionado = $('#veiculoSelect option:selected');
                const veiculoAlugado = veiculoSelecionado.data('alugado') === true || veiculoSelecionado.data('alugado') === "True";

                if (veiculoAlugado) {
                    $('#veiculoSelect').addClass('is-invalid');
                    $('#alugadoWarning').show();
                } else {
                    $('#veiculoSelect').removeClass('is-invalid');
                    $('#alugadoWarning').hide();
                    $('#datas').removeClass('d-none');
                }
            }

            function verificarDataSaida() {
                const saidaSelecionada = $('#saida').val();
                const dataSaida = new Date(saidaSelecionada);
                const dataAtual = new Date();

                dataAtual.setDate(dataAtual.getDate() - 1);

                dataAtual.setHours(0, 0, 0, 0);
                dataSaida.setHours(0, 0, 0, 0);

                if (dataSaida < dataAtual) {
                    $('#saida').addClass('is-invalid');
                    $('#saidaWarning').show();
                } else {
                    $('#saida').removeClass('is-invalid');
                    $('#saidaWarning').hide();
                    $('#retorno').prop('disabled', false);
                }
            }

            function verificarDataRetorno() {
                const saidaSelecionada = $('#saida').val();
                const dataSaida = new Date(saidaSelecionada);
                const retornoSelecionado = $('#retorno').val();
                const dataRetorno = new Date(retornoSelecionado);

                if (dataRetorno <= dataSaida) {
                    $('#retorno').addClass('is-invalid');
                    $('#retornoWarning').show();
                    $('#entradaEplano').addClass('d-none');
                    $('#taxas').addClass('d-none');
                } else {
                    $('#retorno').removeClass('is-invalid');
                    $('#retornoWarning').hide();
                    $('#entradaEplano').removeClass('d-none');
                    $('#taxas').removeClass('d-none');
                    calcularDias();
                }
            }

            function calcularDias() {
                const dataSaida = new Date($('#saida').val());
                const dataRetorno = new Date($('#retorno').val());

                if (dataSaida && dataRetorno && dataRetorno > dataSaida) {
                    const diffTime = Math.abs(dataRetorno - dataSaida);
                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                    $('#dias').val(diffDays);
                    return diffDays;
                } else {
                    $('#dias').val('');
                    return 0;
                }
            }

            function atualizarValorPlano() {
                const planoSelecionado = $('#planoSelect').val();
                const grupoSelecionado = $('#grupoSelect option:selected');
                let valorPlano = '';

                if (planoSelecionado === "diário") {
                    const precoDiaria = parseFloat(grupoSelecionado.data('preco-diaria')) || 0;
                    valorPlano = `Valor: ${precoDiaria.toFixed(2)} R$/dia`;
                } else if (planoSelecionado === "controlado") {
                    const precoDiariaControlada = parseFloat(grupoSelecionado.data('preco-diaria-controlada')) || 0;
                    valorPlano = `Valor: ${precoDiariaControlada.toFixed(2)} R$/dia`;
                } else if (planoSelecionado === "livre") {
                    const precoLivre = parseFloat(grupoSelecionado.data('preco-livre')) || 0;
                    valorPlano = `Valor: ${precoLivre.toFixed(2)} R$`;
                }

                $('#valorPlano').text(valorPlano);
            }

            function calcularValorTotal() {
                const dias = calcularDias();
                const planoSelecionado = $('#planoSelect').val();
                const grupoSelecionado = $('#grupoSelect option:selected');


                let valorTotal = 1000;

                if (planoSelecionado === "diário") {
                    const precoDiaria = parseFloat(grupoSelecionado.data('preco-diaria')) || 0;
                    valorTotal = valorTotal + (dias * precoDiaria);
                } else if (planoSelecionado === "controlado") {
                    const precoDiariaControlada = parseFloat(grupoSelecionado.data('preco-diaria-controlada')) || 0;
                    valorTotal = valorTotal + (dias * precoDiariaControlada);
                } else if (planoSelecionado === "livre") {
                    const precoLivre = parseFloat(grupoSelecionado.data('preco-livre')) || 0;
                    valorTotal = valorTotal + (precoLivre * dias);
                }

                $('.taxa-checkbox:checked').each(function () {
                    const preco = parseFloat($(this).data('preco')) || 0;
                    const precoFixo = $(this).data('precofixo') === true;

                    if (precoFixo) {
                        valorTotal += preco;
                    } else {
                        valorTotal += preco * dias;
                    }
                });

                $('#total').val(valorTotal.toFixed(2));
                $('#valor').val(valorTotal);
            }

            function exibirImagemVeiculo() {
                const veiculoSelecionado = $('#veiculoSelect option:selected');
                const imagemDataUrl = veiculoSelecionado.data('imagem');

                if (imagemDataUrl) {
                    $('#veiculoImagem').attr('src', imagemDataUrl);
                    $('#veiculoImagemGrupoiner').removeClass('d-none');
                } else {
                    $('#veiculoImagemGrupoiner').addClass('d-none');
                }
            }

            function marcarTaxasSelecionadas() {
                const taxasSelecionadas = $('#taxasSelecionadas').val();

                const ids = taxasSelecionadas.split(',');

                ids.forEach(function (id) {
                    $(`#taxa_${id}`).prop('checked', true);
                });

                verificarTaxasComSeguro();
            }

            function verificarTaxasComSeguro() {
                let seguroSelecionado = false;

                $('.taxa-checkbox:checked').each(function () {
                    const isSeguro = $(this).closest('.d-flex').find('.form-switch-container').length > 0;
                    if (isSeguro) {
                        seguroSelecionado = true;
                    }
                });

                $('.form-switch-input').each(function () {
                    if (seguroSelecionado) {
                        $(this).prop('disabled', false).attr('required', true);
                    } else {
                        $(this).prop('disabled', true).prop('checked', false).removeAttr('required');
                    }
                });
            }

            function atualizarTaxasSelecionadas() {
                const idsSelecionados = $('.taxa-checkbox:checked')
                    .map(function () {
                        return $(this).val();
                    })
                    .get()
                    .join(',');

                $('#taxasSelecionadas').val(idsSelecionados);
            }

            $('.taxa-checkbox').change(function () {
                verificarTaxasComSeguro();
                atualizarTaxasSelecionadas();
            });

            $('#planoSelect, #grupoSelect, .taxa-checkbox').change(function () {
                atualizarValorPlano();
                calcularValorTotal();
            });

            $('#saida, #retorno').change(function () {
                calcularValorTotal();
            });

            $('#clienteSelect').change(function () {
                const clienteIdSelecionado = $(this).val();
                filtrarCondutoresPorCliente(clienteIdSelecionado);
            });

            $('#condutorSelect').change(function () {
                verificarValidadeCnh();
            });

            $('#grupoSelect').change(function () {
                const grupoIdSelecionado = $(this).val();
                filtrarVeiculosPorGrupo(grupoIdSelecionado);
                $('#veiculoImagemGrupoiner').addClass('d-none');

                const grupoSelecionado = $('#grupoSelect option:selected');
                const precoDiaria = parseFloat(grupoSelecionado.data('preco-diaria')) || 0;

                if (precoDiaria == 0) {
                    $('#planoWarning').show();
                    $('#veiculoSelect').prop('disabled', true);
                    $('#veiculoSelect').val('');
                    $('#datas').addClass('d-none');
                } else {
                    $('#planoWarning').hide();
                }
            });

            $('#veiculoSelect').change(function () {
                verificarVeiculoAlugado();
                exibirImagemVeiculo();
            });

            $('#saida').change(function () {
                verificarDataSaida();
            });

            $('#retorno').change(function () {
                verificarDataRetorno();
            });

            $('#planoSelect').change(function () {
                $('#mostraTotal').removeClass('d-none');
            });

            $('.taxa-checkbox').each(function () {
                const isChecked = $(this).is(':checked');
                const taxaId = $(this).attr('id').split('_')[1];
                const formSwitchInputs = $(`#seguro_cliente_${taxaId}, #seguro_terceiro_${taxaId}`);

                if (isChecked) {
                    formSwitchInputs.prop('disabled', false).attr('required', true);
                } else {
                    formSwitchInputs.prop('disabled', true).removeAttr('required');
                }
            });

            $('.form-switch-input').change(function () {
                const currentSwitch = $(this);
                const taxaId = currentSwitch.attr('id').split('_')[2];
                const otherSwitchId = currentSwitch.attr('id').includes('cliente')
                    ? `#seguro_terceiro_${taxaId}`
                    : `#seguro_cliente_${taxaId}`;

                if (currentSwitch.is(':checked')) {
                    $(otherSwitchId).prop('checked', false).prop('required', false);
                    currentSwitch.prop('required', true);
                } else {
                    $(otherSwitchId).prop('required', true);
                }
            });

            const clienteIdInicial = $('#clienteSelect').val();
            const condutorIdInicial = $('#condutorSelect').val();
            const grupoIdInicial = $('#grupoSelect').val();
            const veiculoIdInicial = $('#veiculoSelect').val();
            const planoInicial = $('#planoSelect').val();
            const saidaInicial = $('#saida').val();
            const retornoInicial = $('#retorno').val();

            if (clienteIdInicial) {
                if (condutorIdInicial) {
                    $('#condutorSelect').prop('disabled', false);
                    verificarValidadeCnh();

                    if (grupoIdInicial) {
                        if (veiculoIdInicial) {
                            $('#veiculoSelect').prop('disabled', false);
                        }
                        else {
                            filtrarVeiculosPorGrupo(grupoIdInicial);
                        }
                    }
                    else {
                        filtrarVeiculosPorGrupo(grupoIdInicial);
                    }

                }
                else {
                    filtrarCondutoresPorCliente(clienteIdInicial);
                }
            }
            if (planoInicial) {
                $('#mostraTotal').removeClass('d-none');
            }
            if (veiculoIdInicial) {
                $('#datas').removeClass('d-none');
                exibirImagemVeiculo();
            }
            if (saidaInicial && retornoInicial){
                $('#retorno').prop('disabled', false);
                verificarDataRetorno()
            }

            verificarTaxasComSeguro();
            marcarTaxasSelecionadas();
            calcularValorTotal();
        });
    </script>
}